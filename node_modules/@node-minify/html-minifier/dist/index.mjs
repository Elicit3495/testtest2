var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// src/index.ts
import minifier from "html-minifier";
import { utils } from "@node-minify/utils";
var require_src = __commonJS({
  "src/index.ts"(exports, module) {
    var HTMLMinifier = minifier.minify;
    var defaultOptions = {
      collapseBooleanAttributes: true,
      collapseInlineTagWhitespace: true,
      collapseWhitespace: true,
      minifyCSS: true,
      minifyJS: true,
      removeAttributeQuotes: true,
      removeCDATASectionsFromCDATA: true,
      removeComments: true,
      removeCommentsFromCDATA: true,
      removeEmptyAttributes: true,
      removeOptionalTags: true,
      removeRedundantAttributes: true,
      removeScriptTypeAttributes: true,
      removeStyleLinkTypeAttributes: true,
      useShortDoctype: true
    };
    var minifyHTMLMinifier = ({ settings, content, callback, index }) => {
      const options = Object.assign({}, defaultOptions, settings?.options);
      const contentMinified = HTMLMinifier(content ?? "", options);
      if (settings && !settings.content && settings.output) {
        settings.output && utils.writeFile({ file: settings.output, content: contentMinified, index });
      }
      if (callback) {
        return callback(null, contentMinified);
      }
      return contentMinified;
    };
    minifyHTMLMinifier.default = minifyHTMLMinifier;
    module.exports = minifyHTMLMinifier;
  }
});
export default require_src();
/*!
 * node-minify
 * Copyright(c) 2011-2023 Rodolphe Stoclin
 * MIT Licensed
 */
//# sourceMappingURL=index.mjs.map